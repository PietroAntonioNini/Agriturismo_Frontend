@use "sass:color";  

// Variables with light/dark theme support
$primary-color: var(--primary-color);
$primary-dark: var(--primary-dark);
$accent-color: var(--secondary-color);
$danger-color: var(--error-color);
$available-color: var(--success-color);
$occupied-color: var(--error-color);
$maintenance-color: var(--warning-color);
$background-color: var(--app-background);
$card-background: var(--card-background);
$surface-color: var(--card-background);
$text-primary: var(--text-color);
$text-secondary: var(--text-muted);
$border-color: var(--border-color);
$hover-color: rgba(var(--primary-color-rgb), 0.1);
$active-color: rgba(var(--primary-color-rgb), 0.15);
$card-shadow: var(--shadow-medium);
$radius-sm: var(--border-radius-sm);
$radius-md: var(--border-radius-md);
$radius-lg: var(--border-radius-lg);
$transition-speed: var(--transition-normal);

// Rimuovi le spunte nere dai button-toggle a livello globale
:host ::ng-deep {
  .mat-button-toggle-checked::after,
  .mat-button-toggle-checked .mat-button-toggle-label-content::after,
  .mat-button-toggle-checked .mat-icon,
  .mat-button-toggle-appearance-standard .mat-button-toggle-checked .mat-button-toggle-label-content .mat-button-toggle-persistent-hint,
  .mat-mdc-button-toggle-checked-indicator,
  .mat-button-toggle .mdc-button__icon,
  .mdc-button__icon,
  .mdc-button-toggle__indicator,
  .mdc-button-toggle__background,
  .mat-button-toggle-checked .mdc-button-toggle-indicator {
    display: none !important;
    opacity: 0 !important;
    visibility: hidden !important;
    width: 0 !important;
    height: 0 !important;
    margin: 0 !important;
    padding: 0 !important;
    border: none !important;
    min-width: 0 !important;
    min-height: 0 !important;
  }
}

// Mixins per effetti di profondità
@mixin card-raised {
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
  transform: translateY(-4px);
}

@mixin section-separator {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    height: 1px;
    background: linear-gradient(to right, transparent, $border-color, transparent);
  }
}

.apartment-management-container {
  padding: 24px;
  max-width: 1800px;
  margin: 0 auto;
  color: $text-primary;
  user-select: none;
}

// Header section
.header-section {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 32px;
  
  .title-area {
    h1 {
      font-size: 2rem;
      font-weight: 600;
      margin: 0;
      display: flex;
      align-items: center;
      
      .counter {
        font-size: 1.2rem;
        background-color: $primary-color;
        color: white;
        padding: 4px 12px;
        border-radius: 20px;
        margin-left: 16px;
      }
    }
    
    .subtitle {
      color: $text-secondary;
      margin: 8px 0 0;
      font-size: 1rem;
    }
  }
  
  .new-apartment-button {
    padding: 0 24px;
    height: 48px;
    font-size: 1.1rem;
    border-radius: $radius-sm;
    font-weight: 500;
    background-color: $primary-color !important;
    color: white !important;
    
    mat-icon {
      font-size: 25px;
      height: auto;
      width: auto;
      margin-right: 10px;
      margin-bottom: 3px;
      color: white !important;
    }
    
    &:hover {
      transform: translateY(-2px);
      box-shadow: $card-shadow;
      transition: all 0.2s ease;
      background-color: $primary-dark !important;
    }
  }
}

// Search and filter section
.search-filter-section {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 24px;
  flex-wrap: wrap;
  gap: 16px;
  
  .search-container {
    display: flex;
    flex-direction: column;
    flex: 1;
    min-width: 300px;
    
    .search-field {
      width: 100%;
      max-width: 500px;
      
      ::ng-deep .mat-mdc-form-field-flex {
        background-color: $surface-color;
        border-radius: $radius-sm;
      }
      
      ::ng-deep .mat-mdc-text-field-wrapper {
        background-color: transparent;
        padding: 0px !important;
      }
      
      ::ng-deep .mat-mdc-form-field-label {
        color: $text-secondary;
      }
      
      ::ng-deep .mat-mdc-input-element {
        color: $text-primary !important;
      }
      
      ::ng-deep .mat-mdc-input-element::placeholder {
        color: $text-secondary !important;
        opacity: 0.7;
      }
      
      ::ng-deep .mat-mdc-form-field-icon-prefix > .mat-icon {
        color: $primary-color;
      }
      
      ::ng-deep .mat-mdc-form-field-icon-suffix > .mat-icon {
        color: $text-secondary;
      }
      
      // Override del colore del bordo in focus
      ::ng-deep .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {
        color: $primary-color !important;
      }
      
      ::ng-deep .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,
      ::ng-deep .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,
      ::ng-deep .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing {
        border-color: $primary-color !important;
      }
      
      ::ng-deep .mat-mdc-form-field.mat-focused .mat-mdc-select-arrow {
        color: $primary-color;
      }
      
      ::ng-deep .mat-mdc-form-field-ripple {
        background-color: $primary-color !important;
      }
    }
    
    .filter-chips {
      margin-top: 8px;
      
      .custom-button-group {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
      }
      
      .custom-toggle-button {
        display: flex;
        align-items: center;
        height: 32px;
        padding: 0 12px;
        border-radius: 16px;
        background-color: $surface-color;
        color: $text-primary;
        border: 1px solid $border-color;
        font-size: 0.9rem;
        font-family: inherit;
        transition: all 0.2s ease;
        cursor: pointer;
        
        &:hover {
          background-color: $hover-color;
        }
        
        .check-icon {
          font-size: 16px;
          font-weight: bold;
          margin-right: 6px;
          opacity: 0;
          transition: opacity 0.2s ease;
          
          &.green { color: rgba(var(--success-color-rgb)); }
          &.red { color: rgba(var(--error-color-rgb)); }
          &.yellow { color: rgba(var(--warning-color-rgb)); }
        }
        
        &.active {
          .check-icon {
            opacity: 1;
          }
          
          // Stile quando disponibili è attivo
          &:nth-child(1) {
            background-color: rgba(var(--primary-color-rgb), 0.1);
            color: $primary-color;
            border-color: $primary-color;
            
            // Dark mode
            :root[data-theme="dark"] &,
            html[data-theme="dark"] & {
              color: white;
            }
          }
          
          // Stile quando occupati è attivo
          &:nth-child(2) {
            background-color: rgba(var(--error-color-rgb), 0.1);
            color: rgba(var(--error-color-rgb));
            border-color: rgba(var(--error-color-rgb));
            
            // Stile specifico per light-mode
            :root[data-theme="light"] & {
              color: rgba(var(--error-color-rgb));
            }
            
            // Dark mode
            :root[data-theme="dark"] &,
            html[data-theme="dark"] & {
              color: rgba(var(--error-color-rgb));
            }
          }
          
          // Stile quando manutenzione è attivo
          &:nth-child(3) {
            background-color: rgba(var(--warning-color-rgb), 0.1);
            color: rgba(var(--warning-color-rgb));
            border-color: rgba(var(--warning-color-rgb));
            
            // Dark mode
            :root[data-theme="dark"] &,
            html[data-theme="dark"] & {
              color: white;
            }
          }
        }
      }
    }
  }
  
  .view-options {
    display: flex;
    gap: 12px;
    align-items: center;
    justify-content: center;
    background-color: $surface-color;
    padding: 6px;
    border-radius: $radius-md;
    border: 1px solid $border-color;
    
    button {
      background-color: transparent;
      color: $text-secondary;
      border-radius: $radius-sm;
      width: 45px;
      height: 45px;
      display: flex;
      justify-content: center;
      align-items: center;
      transition: all 0.2s ease;
      
      mat-icon {
        font-size: 20px;
        width: 20px;
        height: 20px;
      }
      
      &.active {
        background-color: rgba(var(--primary-color-rgb), 0.2);
        color: $primary-color;
        
        mat-icon {
          color: $primary-color;
        }
      }
      
      &:hover {
        background-color: $hover-color;
      }
    }
  }
}

// Loading container
.loading-container {
  padding: 32px;
  background-color: $card-background;
  border-radius: $radius-md;
  box-shadow: $card-shadow;
  margin-bottom: 24px;
  text-align: center;
  
  mat-progress-bar {
    margin-bottom: 16px;
    
    ::ng-deep .mdc-linear-progress__bar-inner {
      border-color: $primary-color !important;
    }
  }
  
  .loading-text {
    color: $text-secondary;
    font-size: 1rem;
    margin: 0;
  }
}

// Error container
.error-container {
  padding: 32px;
  background-color: rgba(var(--error-color), 0.1);
  border-radius: $radius-md;
  border-left: 4px solid $danger-color;
  margin-bottom: 24px;
  display: flex;
  align-items: center;
  
  mat-icon {
    font-size: 32px;
    height: 32px;
    width: 32px;
    margin-right: 24px;
    color: $danger-color;
  }
  
  .error-details {
    flex: 1;
    
    h3 {
      margin: 0 0 8px;
      font-size: 1.2rem;
      color: $text-primary;
    }
    
    p {
      margin: 0;
      color: $text-secondary;
    }
  }
}

// No results container
.no-results-container {
  padding: 64px 32px;
  background-color: $card-background;
  border-radius: $radius-md;
  box-shadow: $card-shadow;
  text-align: center;
  
  .no-results-content {
    max-width: 400px;
    margin: 0 auto;
    
    mat-icon {
      font-size: 48px;
      height: 48px;
      width: 48px;
      margin-bottom: 16px;
      color: $text-secondary;
    }
    
    h3 {
      font-size: 1.4rem;
      margin: 0 0 8px;
      color: $text-primary;
    }
    
    p {
      color: $text-secondary;
      margin: 0 0 24px;
    }
    
    button {
      background-color: $primary-color !important;
      color: white !important;
      
      mat-icon {
        color: white !important;
        font-size: 20px;
        height: 20px;
        width: 20px;
        margin-right: 8px;
        margin-bottom: 0;
      }
      
      &:hover {
        background-color: $primary-dark !important;
      }
    }
  }
}

// Grid view
.apartments-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 24px;
  margin-bottom: 24px;
  
  .apartment-card {
    background-color: $card-background;
    border-radius: $radius-md;
    overflow: hidden;
    transition: transform 0.2s ease, box-shadow 0.3s ease;
    box-shadow: $card-shadow;
    display: flex;
    flex-direction: column;
    border: 1px solid $border-color;
    
    &:hover {
      cursor: pointer;
      @include card-raised;
    }
    
    &.highlight-available {
      border-left: 3px solid $available-color;
    }

    &.highlight-occupied {
      border-left: 3px solid $occupied-color;
    }

    &.highlight-maintenance {
      border-left: 3px solid $maintenance-color;
    } 
    
    .apartment-header {
      padding: 16px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      @include section-separator;
      background-color: rgba(var(--primary-color-rgb), 0.03);

      &:hover {
        cursor: pointer;
      }
      
      .apartment-name {
        font-size: 1.25rem;
        font-weight: 500;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        color: $text-primary;
      }
      
      .apartment-status-badge {
        font-size: 0.8rem;
        padding: 6px 12px;
        border-radius: 20px;
        font-weight: 500;
        letter-spacing: 0.5px;
        display: flex;
        align-items: center;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

        &::before {
          content: '';
          display: inline-block;
          width: 8px;
          height: 8px;
          border-radius: 50%;
          margin-right: 6px;
        }
        
        &.status-available {
          background-color: rgba(var(--success-color), 0.15);
          color: $available-color;
          border: 2px solid $available-color;
          box-shadow: 0 0 5px rgba(var(--success-color), 0.3);
          
          // Stile per dark mode
          :root[data-theme="dark"] & {
            color: white;
            background-color: rgba(var(--success-color), 0.20);
          }
          
          // Stile specifico per light-mode
          :root[data-theme="light"] & {
            color: #1b8a59;
          }
          
          &::before {
            background-color: $available-color;
          }
        }
        
        &.status-occupied {
          background-color: rgba(var(--error-color-rgb), 0.1);
          color: rgba(var(--error-color-rgb));
          letter-spacing: 0.3px;
          border: 2px solid rgba(var(--error-color-rgb));
          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
          
          // Stile per dark mode
          :root[data-theme="dark"] & {
            color: white;
            background-color: rgba(var(--error-color), 0.25);
          }
          
          // Stile specifico per light-mode
          :root[data-theme="light"] & {
            color: #e53935;
          }
          
          &::before {
            background-color: #ff5252;
          }
        }
        
        &.status-maintenance {
          background-color: rgba(var(--warning-color), 0.15);
          color: $maintenance-color;
          border: 2px solid $maintenance-color;
          box-shadow: 0 0 5px rgba(var(--warning-color), 0.3);
          
          // Stile per dark mode
          :root[data-theme="dark"] & {
            color: white;
            background-color: rgba(var(--warning-color), 0.25);
          }
          
          // Stile specifico per light-mode
          :root[data-theme="light"] & {
            color: #9c7600;
          }
          
          &::before {
            background-color: $maintenance-color;
          }
        }
      }
    }
    
    .apartment-preview {
      position: relative;
      height: 160px;
      cursor: pointer;
      
      .preview-placeholder {
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        background: linear-gradient(135deg, $primary-dark 0%, $primary-color 100%);
        
        mat-icon {
          font-size: 48px;
          height: 48px;
          width: 48px;
          color: rgba(255, 255, 255, 0.9);
        }
      }

      .preview-image {
        height: 100%;
        width: 100%;
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
      }
      
      .price-tag {
        position: absolute;
        bottom: 0;
        right: 0;
        background-color: rgba(0, 0, 0, 0.7);
        padding: 8px 12px;
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        border-top-left-radius: 8px;
        
        span {
          font-size: 1.4rem;
          font-weight: 600;
          color: white;
        }
        
        small {
          font-size: 0.8rem;
          color: rgba(255, 255, 255, 0.8);
        }
      }
    }
    
    .apartment-details {
      padding: 16px;
      flex: 1;
      @include section-separator;
      
      .detail-group {
        display: flex;
        justify-content: space-between;
        margin-bottom: 12px;
        
        &:last-child {
          margin-bottom: 0;
        }
        
        .detail-item {
          display: flex;
          align-items: center;
          
          mat-icon {
            font-size: 18px;
            height: 18px;
            width: 18px;
            margin-right: 8px;
            color: $primary-color;
          }
          
          span {
            font-size: 0.95rem;
            color: $text-secondary;
          }
        }
      }
    }
    
    .apartment-actions {
      padding: 12px;
      display: flex;
      justify-content: flex-end;
      gap: 8px;
      background-color: rgba(var(--primary-color-rgb), 0.05);
      border-top: 1px solid $border-color;
      
      button {
        mat-icon {
          transition: transform 0.2s ease;
        }
        
        &:hover mat-icon {
          transform: scale(1.15);
        }
        
        &[color="primary"] {
          color: $primary-color !important;
          
          mat-icon {
            color: $primary-color !important;
          }
        }
        
        &[color="accent"] {
          color: $maintenance-color !important;
          
          mat-icon {
            color: $maintenance-color !important;
          }
        }
        
        &[color="warn"] {
          color: $danger-color !important;
          
          mat-icon {
            color: $danger-color !important;
          }
        }
      }
    }
  }
}

// List view
.apartments-table-container {
  overflow-x: auto;
  margin-bottom: 24px;
  border-radius: $radius-md;
  box-shadow: $card-shadow;
  
  .apartments-table {
    width: 100%;
    background-color: $card-background;
    
    .mat-mdc-header-row {
      background-color: rgba(var(--primary-color-rgb), 0.05);
      height: 56px;
      
      .mat-mdc-header-cell {
        color: $text-secondary;
        font-size: 0.9rem;
        font-weight: 500;
        letter-spacing: 0.5px;
      }
    }
    
    .mat-mdc-row {
      height: 72px;
      transition: background-color 0.15s ease;
      
      &:hover {
        background-color: $hover-color;
      }
      
      &.available-row {
        border-left: 3px solid $available-color;
      }
      
      &.occupied-row {
        border-left: 3px solid $occupied-color;
      }
      
      &.maintenance-row {
        border-left: 3px solid $maintenance-color;
      }

      // Make sure text is white in dark mode
      :root[data-theme="dark"] & {
        color: white;

        .mat-mdc-cell {
          color: white;
        }
      }
    }
    
    // Make sure all cell text in dark mode is white
    :root[data-theme="dark"] & .mat-mdc-cell {
      color: white;
    }
    
    .status-indicator {
      display: flex;
      align-items: center;
      padding: 4px 10px;
      border-radius: 16px;
      width: fit-content;
      font-size: 0.85rem;
      
      &.status-available {
        background-color: rgba(var(--success-color), 0.15);
        color: $available-color;
        border: 2px solid $available-color;
        font-weight: 500;
        
        // Stile per dark mode
        :root[data-theme="dark"] & {
          color: white;
          background-color: rgba(var(--success-color), 0.2);
          box-shadow: 0 0 5px rgba(var(--success-color), 0.3);
        }
        
        // Stile specifico per light mode
        :root[data-theme="light"] & {
          color: #1b8a59;
          background-color: rgba(var(--success-color), 0.1);
        }
      }
      
      &.status-occupied {
        background-color: rgba(var(--error-color), 0.2);
        color: #ff5252;
        font-weight: 500;
        border: 2px solid #ff5252;
        
        // Stile per dark mode
        :root[data-theme="dark"] & {
          color: white;
          background-color: rgba(var(--error-color), 0.25);
          box-shadow: 0 0 5px rgba(var(--error-color), 0.3);
        }
        
        // Stile specifico per light-mode
        :root[data-theme="light"] & {
          color: #e53935;
          background-color: rgba(229, 57, 53, 0.1);
        }
      }
      
      &.status-maintenance {
        background-color: rgba(var(--warning-color), 0.15);
        color: $maintenance-color;
        border: 2px solid $maintenance-color;
        font-weight: 500;
        
        // Stile per dark mode
        :root[data-theme="dark"] & {
          color: white;
          background-color: rgba(var(--warning-color), 0.25);
          box-shadow: 0 0 5px rgba(var(--warning-color), 0.3);
        }
        
        // Stile specifico per light-mode
        :root[data-theme="light"] & {
          color: #9c7600;
          background-color: rgba(255, 233, 36, 0.15);
        }
      }
    }
    
    .price-cell {
      .price-value {
        font-size: 1.1rem;
        font-weight: 500;
        color: $primary-color;
      }
      
      .price-period {
        font-size: 0.8rem;
        color: $text-secondary;
      }
    }
    
    .apartment-specs {
      display: flex;
      gap: 16px;
      
      .spec-item {
        display: flex;
        align-items: center;
        
        mat-icon {
          font-size: 16px;
          height: 16px;
          width: 16px;
          margin-right: 6px;
          color: $primary-color;
        }
        
        span {
          font-size: 0.9rem;
          color: $text-secondary;
        }
      }
    }
    
    .actions-cell {
      .table-actions {
        display: flex;
        justify-content: flex-end;
        gap: 8px;
        
        button {
          mat-icon {
            transition: transform 0.2s ease;
          }
          
          &:hover mat-icon {
            transform: scale(1.15);
          }
          
          &[color="primary"] {
            color: $primary-color !important;
            
            mat-icon {
              color: $primary-color !important;
            }
          }
          
          &[color="accent"] {
            color: $maintenance-color !important;
            
            mat-icon {
              color: $maintenance-color !important;
            }
          }
          
          &[color="warn"] {
            color: $danger-color !important;
            
            mat-icon {
              color: $danger-color !important;
            }
          }
        }
      }
    }
  }
}

// Pagination controls
.pagination-controls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: $card-background;
  padding: 16px 24px;
  border-radius: $radius-md;
  box-shadow: $card-shadow;
  
  .page-info {
    color: $text-secondary;
    font-size: 0.9rem;
  }
  
  .pagination-buttons {
    display: flex;
    align-items: center;
    
    .page-number {
      margin: 0 16px;
      font-size: 0.95rem;
      font-weight: 500;
      color: $text-primary;
    }
    
    button {
      color: $primary-color;
      
      mat-icon {
        color: $primary-color;
      }
      
      &:disabled {
        color: $text-secondary;
        opacity: 0.5;
        
        mat-icon {
          color: $text-secondary;
        }
      }
      
      &:not(:disabled):hover {
        background-color: $hover-color;
      }
    }
  }
}

// Responsive adjustments
@media (max-width: 768px) {
  .apartment-management-container {
    padding: 16px;
  }
  
  .header-section {
    flex-direction: column;
    align-items: flex-start;
    gap: 16px;
    
    .new-apartment-button {
        padding: 0 24px;
        height: 48px;
        font-size: 1.1rem;
        border-radius: $radius-sm;
        font-weight: 500;
        background-color: $primary-color !important;
        color: white !important;
        
        mat-icon {
          font-size: 20px;
          height: auto;
          width: auto;
          margin-right: 10px;
          margin-bottom: 3px;
          color: white !important;
        }
        
        &:hover {
          transform: translateY(-2px);
          box-shadow: $card-shadow;
          transition: all 0.2s ease;
          background-color: $primary-dark !important;
        }
      }
  }
  
  .apartments-grid {
    grid-template-columns: 1fr;
  }
  
  .apartment-specs {
    flex-wrap: wrap;
    row-gap: 8px;
  }
  
  .pagination-controls {
    flex-direction: column;
    gap: 16px;
    
    .page-info {
      text-align: center;
    }
  }
}

// Override specifico per sovrascrivere il colore del testo nella tabella in dark mode
:root[data-theme="dark"] {
  // Sovrascrive la variabile Material Design per il colore del testo nella tabella
  --mat-table-row-item-label-text-color: white;
  --mat-table-header-headline-color: white;
  
  // Sovrascrive forzatamente il colore degli elementi nella tabella
  .mat-mdc-table .mat-mdc-row {
    color: white !important;
  }
  
  // Colore per le celle della tabella
  td.mat-mdc-cell, 
  th.mat-mdc-header-cell {
    color: white !important;
  }
  
  // Nomi degli appartamenti
  .apartment-card .apartment-name,
  .apartment-card .apartment-header .apartment-name,
  td.mat-column-name {
    color: white !important;
  }
  
  // Testo nella vista a griglia
  .apartments-grid .apartment-card .apartment-header .apartment-name {
    color: white !important;
  }
}